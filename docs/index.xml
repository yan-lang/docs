<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>介绍 on Yan Documentation</title>
    <link>https://yan-lang.github.io/docs/</link>
    <description>Recent content in 介绍 on Yan Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://yan-lang.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>词法分析</title>
      <link>https://yan-lang.github.io/docs/foundation/api/compiler/lexer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yan-lang.github.io/docs/foundation/api/compiler/lexer/</guid>
      <description>Caput vino delphine in tamen vias Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter , per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum .
 Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  Natus quaerere Pectora et sine mulcere, coniuge dum tincta incurvae.</description>
    </item>
    
    <item>
      <title>语法分析</title>
      <link>https://yan-lang.github.io/docs/foundation/api/compiler/parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yan-lang.github.io/docs/foundation/api/compiler/parser/</guid>
      <description>At me ipso nepotibus nunc celebratior genus Tanto oblite Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.
Quam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yan-lang.github.io/docs/common/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yan-lang.github.io/docs/common/error/</guid>
      <description>Buttons Buttons are styled links that can lead to local page or external link.
{{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Example  Get Home  Contribute  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://yan-lang.github.io/docs/common/ycc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yan-lang.github.io/docs/common/ycc/</guid>
      <description>test </description>
    </item>
    
    <item>
      <title>快速开始</title>
      <link>https://yan-lang.github.io/docs/foundation/tutorial/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yan-lang.github.io/docs/foundation/tutorial/quick-start/</guid>
      <description>快速开始 假设我们有一个语言Simple，这个语言只能定义变量，定义变量的规则是先写一个var关键字，然后空格接一个标识符，标识符只能有字母和数字组成，然后可以有一个初始值number，初始值必须是个整数。无需声明类型。
&amp;#39;var&amp;#39; ID &amp;#39;=&amp;#39; number 现在我们利用Foundation框架，为这个语言编写一个简单的词法分析器和语法分析器。 Let&amp;rsquo;s Start!
新建一个项目 下面详细阐述如何将框架导入你的Java项目之中，如果你之前有过使用Java第三方库的经历，你可以选择跳过这一章节，从 下载安装 页面直接下载jar包自行导入。
 Yan-Foundation Jar导入教程 展开  推荐使用Intellij Idea作为开发环境，当然你也可以使用Eclipse，本文以Idea为例。
 打开Idea，新建一个Java项目，选择Java SDK。  Foundation框架使用Java11构建，因此你需要使用Java11或更高版本。当前Oracle发布的最新版本是Java13，如果你的版本低于11，你可以前往Oracle官网下载最新版本的Java SDK。  一直点Next直到创建好项目，你将会得到类似下图的项目结构。如果你勾选了Create Project from Template，你将会和我一样获得一个Main文件。如果没有，你可以自己创建一个。
导入Foundation依赖   对Java不熟悉的同学，可以把这一步想成C++/C的include，或者是Python的pip install。
 在这里，我们使用jar包(点击下载)的形式导入foundation框架。依照下图步骤操作，在第四步后会弹出一个文件选择界面，选择刚刚下载的jar包，然后一直点击OK即可。
   最开始的开始 创建一个可以执行的解释器还有命令行程序需要多少行代码？100？1000？  使用foundation框架，你只需要在你的main函数中添加如下两行代码即可。
package yan.demo.simple; import yan.foundation.Language; import yan.foundation.Launcher; public class Main { public static void main(String[] args) { Language language = new Language(); Launcher.launch(language, args); } } 解释器 如果你使用Idea，点击main函数旁边的绿色三角形即可启动程序。启动之后，你将看到类似下图所示的一个交互式解释器。</description>
    </item>
    
  </channel>
</rss>