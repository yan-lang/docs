'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/yan-tutorial/docs/welcome/about-yan/','title':"About Yan",'content':"Caput vino delphine in tamen vias Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  Natus quaerere Pectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\n Phrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\n Limitibus misere sit Aurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua Iuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta Mortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"});index.add({'id':1,'href':'/yan-tutorial/docs/lang-ref/lexical/','title':"Lexical Grammar",'content':"Lexical Grammar IDENTIFIER -\u0026gt; ALPHA (ALPHA | DIGIT)* ALPHA -\u0026gt; a-z | A-Z | _ DIGIT -\u0026gt; 0-9 STRING -\u0026gt; \u0026#34; any char except \u0026#34; \u0026#34; NUMBER -\u0026gt; DIGIT+ [.DIGIT+] LINE_COMMENT -\u0026gt; \u0026#34;//\u0026#34; any character BLOCK_COMMENT -\u0026gt;. \u0026#34;/*\u0026#34;any character \u0026#34;*/\u0026#34; "});index.add({'id':2,'href':'/yan-tutorial/docs/lang-guide/var/','title':"Variable",'content':"Variable "});index.add({'id':3,'href':'/yan-tutorial/docs/welcome/','title':"Welcome to Yan",'content':"Welcome to Yan Yan is an educational programming language, which is designed for the purpose of practices of Compiler Principle and its related courses.\n"});index.add({'id':4,'href':'/yan-tutorial/docs/lang-guide/expression/','title':"Expression",'content':"Expression "});index.add({'id':5,'href':'/yan-tutorial/docs/lang-guide/','title':"Language Guide",'content':"Ubi loqui Mentem genus facietque salire tempus bracchia Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp);  Placabilis coactis nega ingemuit ignoscat nimia non Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; }  Caesorum illa tu sentit micat vestes papyriferi Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"});index.add({'id':6,'href':'/yan-tutorial/docs/welcome/quick-start/','title':"Quick Start",'content':"At me ipso nepotibus nunc celebratior genus Tanto oblite Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius Quibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\n Remansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit  Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae Credulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\n Baculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra  Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"});index.add({'id':7,'href':'/yan-tutorial/docs/lang-ref/syntax/','title':"Syntactic Grammar",'content':"Syntactic Grammar program -\u0026gt; declartion* EOF Decalarations declaration -\u0026gt; funcDecl | varDecl | statement funcDecl -\u0026gt; \u0026#34;func\u0026#34; IDENTIFIER \u0026#34;(\u0026#34; parameters \u0026#34;)\u0026#34; [\u0026#34;-\u0026gt;\u0026#34; type] block varDecl -\u0026gt; \u0026#34;var\u0026#34; IDENTIFIER \u0026#34;:\u0026#34; type [\u0026#34;=\u0026#34; expression] \u0026#34;;\u0026#34; type -\u0026gt; \u0026#34;float\u0026#34; | \u0026#34;int\u0026#34; | \u0026#34;string\u0026#34; | \u0026#34;bool\u0026#34; | \u0026#34;char\u0026#34; parameters -\u0026gt; IDENTIFIER: type Statements statement -\u0026gt; block | ifStmt | whileStmt | forStmt | exprStmt | returnStmt | continueStmt | breakStmt | printStmt ifStmt -\u0026gt; \u0026#34;if\u0026#34; \u0026#34;(\u0026#34; expression \u0026#34;)\u0026#34; \u0026#34;{\u0026#34; block \u0026#34;}\u0026#34; [\u0026#34;else\u0026#34; block ] whileStmt -\u0026gt; \u0026#34;while\u0026#34; \u0026#34;(\u0026#34; expression \u0026#34;)\u0026#34; block forStmt -\u0026gt; \u0026#34;for\u0026#34; \u0026#34;(\u0026#34;varDecl|exprStmt\u0026#34;;\u0026#34; expression\u0026#34;;\u0026#34; expression\u0026#34;)\u0026#34; block exprStmt -\u0026gt; expression \u0026#34;;\u0026#34; returnStmt -\u0026gt; \u0026#34;return\u0026#34; [expression] \u0026#34;;\u0026#34; continueStmt -\u0026gt; \u0026#34;continue\u0026#34; \u0026#34;;\u0026#34; breakStmt -\u0026gt; \u0026#34;break\u0026#34; \u0026#34;;\u0026#34; block -\u0026gt; \u0026#34;{\u0026#34; statement* \u0026#34;}\u0026#34; printStmt -\u0026gt; \u0026#34;print\u0026#34; \u0026#34;(\u0026#34; expression \u0026#34;)\u0026#34; Expressions expression -\u0026gt; assignment assignment -\u0026gt; IDENTIFIER \u0026#34;=\u0026#34; assignment | logic_or logic_or -\u0026gt; logic_and (\u0026#34;||\u0026#34; logic_and)* logic_and -\u0026gt; equality (\u0026#34;\u0026amp;\u0026amp;\u0026#34; equality)* equality -\u0026gt; comparison ((\u0026#34;!=\u0026#34; | \u0026#34;==\u0026#34;) comparison)* comparison -\u0026gt; addition ((\u0026#34;\u0026gt;=\u0026#34; | \u0026#34;\u0026gt;\u0026#34; | \u0026#34;\u0026lt;\u0026#34; | \u0026#34;\u0026lt;=\u0026#34;) addition)* addition -\u0026gt; multiplication ((\u0026#34;+\u0026#34; | \u0026#34;-\u0026#34;) multiplication)* multiplication -\u0026gt; cast ((\u0026#34;*\u0026#34; | \u0026#34;/\u0026#34;) cast)* cast -\u0026gt; (\u0026#34;(\u0026#34; type-name \u0026#34;)\u0026#34;) unary unary -\u0026gt; (\u0026#34;!\u0026#34; | \u0026#34;-\u0026#34;) unary | call call -\u0026gt; primary \u0026#34;(\u0026#34; [arguments] \u0026#34;)\u0026#34; primary -\u0026gt; \u0026#34;true\u0026#34; | \u0026#34;false\u0026#34; | NUMBER | STRING | IDENTIFIER | \u0026#34;(\u0026#34;expression\u0026#34;)\u0026#34; arguments -\u0026gt; expression (\u0026#34;,\u0026#34; expression)* "});index.add({'id':8,'href':'/yan-tutorial/docs/lang-guide/control-flow/','title':"Control Flow",'content':"Control Flow "});index.add({'id':9,'href':'/yan-tutorial/docs/lang-ref/','title':"Language Reference",'content':"About Language Reference This part of the book describes the formal grammar of the Yan programming language.\nHow to Read the Grammar The notation used to describe the formal grammar of the Yan programming language follows a few conventions:\n An arrow (→) is used to mark grammar productions and can be read as “can consist of.” Syntactic categories are indicated by italic text and appear on both sides of a grammar production rule. Literal words and punctuation are indicated by boldface constant width text and appear only on the right-hand side of a grammar production rule. Alternative grammar productions are separated by vertical bars (|). When alternative productions are too long to read easily, they are broken into multiple grammar production rules on new lines. In a few cases, regular font text is used to describe the right-hand side of a grammar production rule. Optional syntactic categories and literals are marked by a trailing subscript, opt.  "});index.add({'id':10,'href':'/yan-tutorial/docs/lang-ref/summary/','title':"Summary",'content':"Summary "});index.add({'id':11,'href':'/yan-tutorial/docs/lang-guide/func/','title':"Function",'content':"Function 测试一下\nvar a:int = 10 func add(a:int, b:int) -\u0026gt; int { return } 测试一下代码高亮\nfunc power(base: int, e: int) -\u0026gt; int { var i = 0; var result = 1; while(i \u0026lt; e) { result *= base; i += 1; } return result; }  MacOS  MacOS Content 测试一下  Linux  Linux Content  Windows  Windows Content   "});index.add({'id':12,'href':'/yan-tutorial/categories/','title':"Categories",'content':""});index.add({'id':13,'href':'/yan-tutorial/docs/','title':"Docs",'content':""});index.add({'id':14,'href':'/yan-tutorial/','title':"Introduction",'content':"Welcome to Yan Yan is an educational programming language, which is designed for the purpose of practices of Compiler Principle and its related courses.\n"});index.add({'id':15,'href':'/yan-tutorial/tags/','title':"Tags",'content':""});})();